from gigachat import GigaChat
from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext

from elements.states_group import CheckLiteracy, not_in_state_filter
from elements.inline import back_btn

router = Router()


@router.callback_query(not_in_state_filter, F.data == "check_literacy")
async def start_check_literacy_text(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text(
        text="–î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–∫—Å—Ç–∞ (–¥–æ 1.000 —Å–∏–º–≤–æ–ª–æ–≤) –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –µ–≥–æ –≤ —á–∞—Ç:"
    )
    await state.set_state(CheckLiteracy.input)


@router.message(CheckLiteracy.input)
async def check_litracy_text(message: Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        await message.answer(text="–£–ø—Å! –ü–∞–Ω–µ–ª—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç–∏ –Ω–µ –±—ã–ª–∞ –∑–∞–ø—É—â–µ–Ω–∞...")
        return

    bot_message = await message.answer("üîé –î—É–º–∞—é...")
    Giga_Chat = GigaChat(
        credentials=message.bot.config["SETTINGS"]["giga_chat_token"], verify_ssl_certs=False
    )
    with Giga_Chat as giga:
        response = giga.chat(
            f'–í –æ—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –¢–û–õ–¨–ö–û "{message.text[:1000]}" —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏ –ø–æ –≤—Å–µ–º –ø—Ä–∞–≤–∏–ª–∞–º —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞!'
        )

    await bot_message.edit_text(
        text=f"{response.choices[0].message.content}\n\n<i>–í—ã –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–æ 1.000 —Å–∏–º–≤–æ–ª–æ–≤:</i>",
        reply_markup=back_btn().as_markup()
    )
